#!/bin/bash



#################### Arguments ####################
if [ $# -ne 1 ]
then
    echo "Incorrect arguments. Should be [PEDESTAL]"
    exit 1
fi
PED=$1



#################### Variables ####################
RDOUT_NAME="new_rdout"

# Directories
RDOUTDIR="$PWD"
BINDIR="$RDOUTDIR/bin"
SRCDIR="$RDOUTDIR/src"
FWDIR="$RDOUTDIR/fw"

# Executables
PROGEXE="$BINDIR/ProgramFPGA"
RDOUTEXE="$BINDIR/$RDOUT_NAME"
SLEEPEXE="$BINDIR/take_a_nap"
PWREXE="$BINDIR/pwr_cycle_fpgas"
COMPILE="$RDOUTDIR/compile"

# Firmware Files
DATA_FW="$FWDIR/data_orm1.hex"
CTL_FW="$FWDIR/ctl_orm_rst.hex"

# ORM Arrays
DATA_ORMS=( 0 1 2 3 )
CTL_ORM=4

# Other
RDOUT_ARGS="$PED"
END_FILE="$RDOUTDIR/stop.run.please"



#################### STARTUP ####################
# Remove end file so the helper process will run
if [ -f $END_FILE ]
then
    rm $END_FILE
fi

# Kill any old rdout processes
TMP="$(pgrep $RDOUT_NAME)"
if [ $TMP ]
then
    sudo kill $TMP
fi



#################### FW INSTALL ####################
# Data ORMs
for ORM in "${DATA_ORMS[@]}"
do
    echo "Programming ORM $ORM"
    sudo $PROGEXE $ORM < $DATA_FW >> /dev/null
    # TODO CHECK SUCCESS
done

# CTL ORM
echo "Programming ORM $CTL_ORM"
sudo $PROGEXE $CTL_ORM < $CTL_FW >> /dev/null
# TODO CHECK SUCCESS




#################### RUN RDOUT ####################
# Compile (using the compile script)
$COMPILE
# TODO CHECK SUCCESS
sudo ./bin/set_ip_mac_address

# Run
# nohup sudo $RDOUTEXE $RDOUT_ARGS &> log.txt &
sudo $RDOUTEXE $RDOUT_ARGS
